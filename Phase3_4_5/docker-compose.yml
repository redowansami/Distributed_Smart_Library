version: '3.8'

networks:
  microservices-network:
    driver: bridge

services:
  users-db:
    networks:
      - microservices-network
    image: postgres:16
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - users_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  books-db:
    image: postgres:16
    networks:
      - microservices-network
    environment:
      POSTGRES_DB: books_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - books_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  loans-db:
    image: postgres:16
    networks:
      - microservices-network
    environment:
      POSTGRES_DB: loans_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - loans_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build: ./user-service
    networks:
      - microservices-network
    environment:
      USER_DB_URL: postgresql://postgres:postgres@users-db:5432/users_db
      PORT: 5000
      USER_SERVICE_URL: http://user-service:5000
      BOOK_SERVICE_URL: http://book-service:5002
      LOAN_SERVICE_URL: http://loan-service:5001
      PYTHONUNBUFFERED: 1
    depends_on:
      users-db:
        condition: service_healthy
    ports:
      - "5000:5000"
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  book-service:
    build: ./book-service
    networks:
      - microservices-network
    environment:
      BOOK_DB_URL: postgresql://postgres:postgres@books-db:5432/books_db
      PORT: 5002
      USER_SERVICE_URL: http://user-service:5000
      BOOK_SERVICE_URL: http://book-service:5002
      LOAN_SERVICE_URL: http://loan-service:5001
      PYTHONUNBUFFERED: 1
    depends_on:
      books-db:
        condition: service_healthy
      user-service:
        condition: service_healthy
    ports:
      - "5002:5002"
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  loan-service:
    build: ./loan-service
    networks:
      - microservices-network
    environment:
      LOAN_DB_URL: postgresql://postgres:postgres@loans-db:5432/loans_db
      PORT: 5001
      USER_SERVICE_URL: http://user-service:5000
      BOOK_SERVICE_URL: http://book-service:5002
      LOAN_SERVICE_URL: http://loan-service:5001
      PYTHONUNBUFFERED: 1
    depends_on:
      loans-db:
        condition: service_healthy
      user-service:
        condition: service_healthy
      book-service:
        condition: service_healthy
    ports:
      - "5001:5001"
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build: ./nginx
    networks:
      - microservices-network
    ports:
      - "8080:80"
    depends_on:
      user-service:
        condition: service_healthy
      book-service:
        condition: service_healthy
      loan-service:
        condition: service_healthy

volumes:
  users_data:
  books_data:
  loans_data:
